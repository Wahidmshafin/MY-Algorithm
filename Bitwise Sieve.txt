vll pr;                    // it will contain all the prime number;
vector<int> status;        // it will declare if its i th values, j th bit is prime or not.
bool check(int n, int pos) // jodi pos tomo bit er value 0 hoi, then ota ekta prime number.
{
    return (bool)(n & (1 << pos));
}
int Set(int n, int pos) // pos tomo bit ke amra 1 banai ditesi...fol e era je prime na ta nirdesh holo.
{
    return n | (1 << pos);
}
void bit_sieve(int n) // it will generate all the prime numbers  <=n
{
    int i, j, k;
    pr.push_back(2);
    status.assign(n / 32 + 1, 0);
    for (i = 3; i * i <= n; i = i + 2)
    {
        if (!check(status[i >> 5], i & 31)) // i>>5 is the same as i/2^5 and i&31 is same as i%32
        {
            pr.push_back(i);
            //cout << i << endl;
            for (j = i * i; j <= n; j = j + (2 * i))
            {
                status[j >> 5] = Set(status[j >> 5], j % 32);
            }
        }
    }
    
    for (; i <= n; i = i + 2)
    {
        if (!check(status[i >> 5], i & 31))
        {
            
            pr.push_back(i);
        }
    }
}
