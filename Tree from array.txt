#include<iostream>
#include<algorithm>
#include<vector>
#include<cstdlib>
using namespace std;
class node
{
public:
	int data;
	node* left, * right;
	node(int d)
	{
		data = d;
		left = NULL;
		right = NULL;
	}
};
node* head = NULL;
node* creation(node* root,vector<int>&v,int i,int n)
{
	if (i < n)
	{
		if (root == NULL)
		{
			root = new node(v[i]);
		}
		root->left = creation(root->left, v, 2 * i + 1, n);
		root->right = creation(root->right, v, 2 * i + 2, n);
	}
	return root;
}
void inorder(node* root)
{
	if (root == NULL)
		return;
	inorder(root->left);
	cout << root->data << " ";
	inorder(root->right);
}
void del(node* n)
{
	node* srt = n;
	if (srt == NULL)
		return;
	del(srt->left);
	del(srt->right);
	delete(srt);
}
int main()
{
	int a, b, c, i, j, k;
	vector<int>v;
	cin >> a;
	for (i = 0; i < a; i++)
	{
		b = rand() % 27;
		cout << b << " ";
		v.push_back(b);
	}
	cout << endl;
	head=creation(head, v, 0, a);
	inorder(head);
	cout << endl;
	del(head);
	return 0;
}
